/**
 * Sunshine Conversations API
 *
 * The version of the OpenAPI document: 12.3.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.3.1
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';

/**
 * The UserAllOf model module.
 * @module sunshine-conversations-client/sunshine-conversations-client.model/UserAllOf
 * @version 12.3.0
 */
class UserAllOf {
    /**
     * Constructs a new <code>UserAllOf</code>.
     * The message author.
     * @alias module:sunshine-conversations-client/sunshine-conversations-client.model/UserAllOf
     */
    constructor() { 
        
        UserAllOf.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UserAllOf</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:sunshine-conversations-client/sunshine-conversations-client.model/UserAllOf} obj Optional instance to populate.
     * @return {module:sunshine-conversations-client/sunshine-conversations-client.model/UserAllOf} The populated <code>UserAllOf</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserAllOf();

            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

/**
     * Returns The type of the author.
     * @return {module:sunshine-conversations-client/sunshine-conversations-client.model/UserAllOf.TypeEnum}
     */
    getType() {
        return this.type;
    }

    /**
     * Sets The type of the author.
     * @param {module:sunshine-conversations-client/sunshine-conversations-client.model/UserAllOf.TypeEnum} type The type of the author.
     */
    setType(type) {
        this['type'] = type;
    }

}

/**
 * The type of the author.
 * @member {module:sunshine-conversations-client/sunshine-conversations-client.model/UserAllOf.TypeEnum} type
 */
UserAllOf.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
UserAllOf['TypeEnum'] = {

    /**
     * value: "user"
     * @const
     */
    "user": "user"
};



export default UserAllOf;

