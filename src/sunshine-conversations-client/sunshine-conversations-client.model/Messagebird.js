/**
 * Sunshine Conversations API
 *
 * The version of the OpenAPI document: 9.4.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.3.1
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';
import Integration from './Integration';
import MessagebirdAllOf from './MessagebirdAllOf';
import Status from './Status';

/**
 * The Messagebird model module.
 * @module sunshine-conversations-client/sunshine-conversations-client.model/Messagebird
 * @version 9.4.0
 */
class Messagebird {
    /**
     * Constructs a new <code>Messagebird</code>.
     * @alias module:sunshine-conversations-client/sunshine-conversations-client.model/Messagebird
     * @extends module:sunshine-conversations-client/sunshine-conversations-client.model/Integration
     * @implements module:sunshine-conversations-client/sunshine-conversations-client.model/Integration
     * @implements module:sunshine-conversations-client/sunshine-conversations-client.model/MessagebirdAllOf
     * @param type {String} The type of integration.
     * @param accessKey {String} The public API key of your MessageBird account.
     * @param signingKey {String} The signing key of your MessageBird account. Used to validate the webhooks' origin.
     * @param originator {String} Sunshine Conversations will receive all messages sent to this phone number.
     */
    constructor(type, accessKey, signingKey, originator) { 
        Integration.initialize(this, type);MessagebirdAllOf.initialize(this, accessKey, signingKey, originator);
        Messagebird.initialize(this, type, accessKey, signingKey, originator);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type, accessKey, signingKey, originator) { 
        obj['accessKey'] = accessKey;
        obj['signingKey'] = signingKey;
        obj['originator'] = originator;
    }

    /**
     * Constructs a <code>Messagebird</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:sunshine-conversations-client/sunshine-conversations-client.model/Messagebird} obj Optional instance to populate.
     * @return {module:sunshine-conversations-client/sunshine-conversations-client.model/Messagebird} The populated <code>Messagebird</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Messagebird();
            Integration.constructFromObject(data, obj);
            Integration.constructFromObject(data, obj);
            MessagebirdAllOf.constructFromObject(data, obj);

            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('accessKey')) {
                obj['accessKey'] = ApiClient.convertToType(data['accessKey'], 'String');
            }
            if (data.hasOwnProperty('signingKey')) {
                obj['signingKey'] = ApiClient.convertToType(data['signingKey'], 'String');
            }
            if (data.hasOwnProperty('originator')) {
                obj['originator'] = ApiClient.convertToType(data['originator'], 'String');
            }
            if (data.hasOwnProperty('webhookSecret')) {
                obj['webhookSecret'] = ApiClient.convertToType(data['webhookSecret'], 'String');
            }
        }
        return obj;
    }

/**
     * Returns The type of integration.
     * @return {String}
     */
    getType() {
        return this.type;
    }

    /**
     * Sets The type of integration.
     * @param {String} type The type of integration.
     */
    setType(type) {
        this['type'] = type;
    }
/**
     * Returns The public API key of your MessageBird account.
     * @return {String}
     */
    getAccessKey() {
        return this.accessKey;
    }

    /**
     * Sets The public API key of your MessageBird account.
     * @param {String} accessKey The public API key of your MessageBird account.
     */
    setAccessKey(accessKey) {
        this['accessKey'] = accessKey;
    }
/**
     * Returns The signing key of your MessageBird account. Used to validate the webhooks' origin.
     * @return {String}
     */
    getSigningKey() {
        return this.signingKey;
    }

    /**
     * Sets The signing key of your MessageBird account. Used to validate the webhooks' origin.
     * @param {String} signingKey The signing key of your MessageBird account. Used to validate the webhooks' origin.
     */
    setSigningKey(signingKey) {
        this['signingKey'] = signingKey;
    }
/**
     * Returns Sunshine Conversations will receive all messages sent to this phone number.
     * @return {String}
     */
    getOriginator() {
        return this.originator;
    }

    /**
     * Sets Sunshine Conversations will receive all messages sent to this phone number.
     * @param {String} originator Sunshine Conversations will receive all messages sent to this phone number.
     */
    setOriginator(originator) {
        this['originator'] = originator;
    }
/**
     * Returns The secret that is used to configure webhooks in MessageBird.
     * @return {String}
     */
    getWebhookSecret() {
        return this.webhookSecret;
    }

    /**
     * Sets The secret that is used to configure webhooks in MessageBird.
     * @param {String} webhookSecret The secret that is used to configure webhooks in MessageBird.
     */
    setWebhookSecret(webhookSecret) {
        this['webhookSecret'] = webhookSecret;
    }

}

/**
 * The type of integration.
 * @member {String} type
 * @default 'messagebird'
 */
Messagebird.prototype['type'] = 'messagebird';

/**
 * The public API key of your MessageBird account.
 * @member {String} accessKey
 */
Messagebird.prototype['accessKey'] = undefined;

/**
 * The signing key of your MessageBird account. Used to validate the webhooks' origin.
 * @member {String} signingKey
 */
Messagebird.prototype['signingKey'] = undefined;

/**
 * Sunshine Conversations will receive all messages sent to this phone number.
 * @member {String} originator
 */
Messagebird.prototype['originator'] = undefined;

/**
 * The secret that is used to configure webhooks in MessageBird.
 * @member {String} webhookSecret
 */
Messagebird.prototype['webhookSecret'] = undefined;


// Implement Integration interface:
/**
 * The unique ID of the integration.
 * @member {String} id
 */
Integration.prototype['id'] = undefined;
/**
 * The type of integration.
 * @member {String} type
 */
Integration.prototype['type'] = undefined;
/**
 * @member {module:sunshine-conversations-client/sunshine-conversations-client.model/Status} status
 */
Integration.prototype['status'] = undefined;
/**
 * A human-friendly name used to identify the integration.
 * @member {String} displayName
 */
Integration.prototype['displayName'] = undefined;
// Implement MessagebirdAllOf interface:
/**
 * The type of integration.
 * @member {String} type
 * @default 'messagebird'
 */
MessagebirdAllOf.prototype['type'] = 'messagebird';
/**
 * The public API key of your MessageBird account.
 * @member {String} accessKey
 */
MessagebirdAllOf.prototype['accessKey'] = undefined;
/**
 * The signing key of your MessageBird account. Used to validate the webhooks' origin.
 * @member {String} signingKey
 */
MessagebirdAllOf.prototype['signingKey'] = undefined;
/**
 * Sunshine Conversations will receive all messages sent to this phone number.
 * @member {String} originator
 */
MessagebirdAllOf.prototype['originator'] = undefined;
/**
 * The secret that is used to configure webhooks in MessageBird.
 * @member {String} webhookSecret
 */
MessagebirdAllOf.prototype['webhookSecret'] = undefined;




export default Messagebird;

